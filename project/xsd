<xs:schema targetNamespace="http://www.w3schools.com"
    elementFormDefault="qualified"
    xmlns="http://www.w3schools.com"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://www.w3schools.com">

    <xs:element name="Composition">
        <xs:complexType>
            <xs:all>
                <xs:element ref="Key" />
                <xs:element ref="KeyChanges" />
                <xs:element ref="Definitions" />
                <xs:element ref="Channels" />
            </xs:all>
        </xs:complexType>

        <xs:key name="GenDef-id">
            <xs:selector xpath="tns:Definitions/tns:GenDef" />
            <xs:field xpath="@id" />
        </xs:key>
        <xs:key name="ModDef-id">
            <xs:selector xpath="tns:Definitions/tns:ModDef" />
            <xs:field xpath="@id" />
        </xs:key>

        <xs:keyref name="Gen-id" refer="GenDef-id">
            <xs:selector xpath="tns:Channels/tns:Channel/tns:Track/tns:Item/tns:Gen" />
            <xs:field xpath="@ref" />
        </xs:keyref>
        <xs:keyref name="Mod-id" refer="ModDef-id">
            <xs:selector xpath="tns:Channels/tns:Channel/tns:Track/tns:Item/tns:Mod" />
            <xs:field xpath="@ref" />
        </xs:keyref>

        <xs:unique name="KeyChange-beat">
            <xs:selector xpath="tns:KeyChange" />
            <xs:field xpath="@beat" />
        </xs:unique>
    </xs:element>

    <xs:element name="Definitions">
        <xs:annotation>
            <xs:documentation> Define any generators and modifiers to be used in the composition
                here. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="GenDef" minOccurs="0" maxOccurs="unbounded" />
                <xs:element ref="ModDef" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="GenDef">
        <xs:annotation>
            <xs:documentation> Assign an ID to a configured generator. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice>

            </xs:choice>
            <xs:attribute name="id" type="id" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="ModDef">
        <xs:annotation>
            <xs:documentation> Assign an ID to a configured modifier. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice>

            </xs:choice>
            <xs:attribute name="id" type="id" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="Channels">
        <xs:annotation>
            <xs:documentation> Holds channels. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Channel" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="Channel">
        <xs:annotation>
            <xs:documentation> A channel is the equivelant of a system on a music partitura. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Track" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="instrument" type="instrument" use="required">
                <xs:annotation>
                    <xs:documentation> The sound to be used during playback. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="Track">
        <xs:annotation>
            <xs:documentation> A track is the equivelant of a stave on a music partitura. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Item" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="Item">
        <xs:complexType>
            <xs:attribute name="length" type="length" use="required">
                <xs:annotation>
                    <xs:documentation> The length of the generation in whole notes. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ref" type="id">
                <xs:annotation>
                    <xs:documentation> Must reference the ID of a GenDef. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="add" type="xs:positiveInteger">
                <xs:annotation>
                    <xs:documentation> The number of scale degrees to raise the generation. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="sub" type="xs:positiveInteger">
                <xs:annotation>
                    <xs:documentation> The number of scale degrees to lower the generation. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="offset" type="xs:double">
                <xs:annotation>
                    <xs:documentation> The offset of the generation in whole notes. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="Gen">
        <xs:annotation>
            <xs:documentation> Generation. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="ref" type="id" use="required">
                <xs:annotation>
                    <xs:documentation> Must reference the ID of a GenDef under Definitions. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="start" type="beat">
                <xs:annotation>
                    <xs:documentation> The beat that the generation should start from. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="add" type="xs:positiveInteger">
                <xs:annotation>
                    <xs:documentation> The number of scale degrees to raise the generation. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="sub" type="xs:positiveInteger">
                <xs:annotation>
                    <xs:documentation> The number of scale degrees to lower the generation. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="Mod">
        <xs:annotation>
            <xs:documentation> Modification. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="ref" type="id" use="required">
                <xs:annotation>
                    <xs:documentation> Must reference the ID of a ModDef under Definitions. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="KeyChanges">
        <xs:annotation>
            <xs:documentation> Holds key changes. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="KeyChange" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="KeyChange">
        <xs:annotation>
            <xs:documentation> Any generator output after this key change will be interpreted in the
                provided key until another key change is specified. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element ref="Key" />
            </xs:all>
            <xs:attribute name="beat" type="beat" use="required">
                <xs:annotation>
                    <xs:documentation> The beat on which the key change takes effect. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="Key">
        <xs:annotation>
            <xs:documentation> A music key. Any generator output will be interpreted in the
                concurrent key. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="root" type="pitchclass" use="required">
                <xs:annotation>
                    <xs:documentation> The root pitchclass of the key. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="mode" type="mode" use="required">
                <xs:annotation>
                    <xs:documentation> The mode of the key. </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="id">
        <xs:restriction base="xs:string">
            <xs:minLength value="1" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="beat">
        <xs:restriction base="xs:float">
            <xs:minInclusive value="0" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="length">
        <xs:restriction base="xs:float">
            <xs:minExclusive value="0" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="pitchclass">
        <xs:restriction base="xs:string">
            <xs:enumeration value="A" />
            <xs:enumeration value="B" />
            <xs:enumeration value="C" />
            <xs:enumeration value="D" />
            <xs:enumeration value="E" />
            <xs:enumeration value="F" />
            <xs:enumeration value="G" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="mode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Major" />
            <xs:enumeration value="Minor" />
            <xs:enumeration value="Ionian" />
            <xs:enumeration value="Dorian" />
            <xs:enumeration value="Phrygian" />
            <xs:enumeration value="Lydian" />
            <xs:enumeration value="Mixolydian" />
            <xs:enumeration value="Aeolian" />
            <xs:enumeration value="Locrian" />
            <xs:enumeration value="Chromatic" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="instrument">
        <xs:restriction base="xs:string">
            <xs:enumeration value="violin" />
            <xs:enumeration value="cello" />
            <xs:enumeration value="double bass" />
            <xs:enumeration value="flute" />
            <xs:enumeration value="clarinet" />
            <xs:enumeration value="saxophone" />
            <xs:enumeration value="trumpet" />
            <xs:enumeration value="guitar" />
            <xs:enumeration value="piano" />
            <xs:enumeration value="harp" />
        </xs:restriction>
    </xs:simpleType>
</xs:schema>